{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport { firestore } from './db';\n\nfunction fetchCollectionDocs(collectionName) {\n  var data = [];\n  return new _Promise(function (resolve, reject) {\n    firestore.collection(collectionName).get().then(function (documentSet) {\n      if (documentSet != null) {\n        documentSet.forEach(function (doc) {\n          data.push(_objectSpread({\n            id: doc.id\n          }, doc.data()));\n        });\n      }\n\n      resolve(data);\n    });\n  });\n}\n\nfunction fetchDocumentFromCollection(_ref) {\n  var id = _ref.id,\n      collectionName = _ref.collectionName;\n  return new _Promise(function (resolve, reject) {\n    firestore.collection(collectionName).doc(id).get().then(function (doc) {\n      if (doc.exists) {\n        resolve(_objectSpread({\n          id: doc.id\n        }, doc.data()));\n      } else {\n        resolve({});\n      }\n    });\n  });\n}\n\nexport { fetchCollectionDocs, fetchDocumentFromCollection };","map":{"version":3,"sources":["/Users/dean/github/next-tutorial/social/lib/utility.js"],"names":["firestore","fetchCollectionDocs","collectionName","data","resolve","reject","collection","get","then","documentSet","forEach","doc","push","id","fetchDocumentFromCollection","exists"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,MAA1B;;AAEA,SAASC,mBAAT,CAA6BC,cAA7B,EAA6C;AAC3C,MAAMC,IAAI,GAAG,EAAb;AACA,SAAO,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCL,IAAAA,SAAS,CACNM,UADH,CACcJ,cADd,EAEGK,GAFH,GAGGC,IAHH,CAGQ,UAAAC,WAAW,EAAI;AACnB,UAAIA,WAAW,IAAI,IAAnB,EAAyB;AACvBA,QAAAA,WAAW,CAACC,OAAZ,CAAoB,UAAAC,GAAG,EAAI;AACzBR,UAAAA,IAAI,CAACS,IAAL;AACEC,YAAAA,EAAE,EAAEF,GAAG,CAACE;AADV,aAEKF,GAAG,CAACR,IAAJ,EAFL;AAID,SALD;AAMD;;AACDC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAbH;AAcD,GAfM,CAAP;AAgBD;;AAED,SAASW,2BAAT,OAA6D;AAAA,MAAtBD,EAAsB,QAAtBA,EAAsB;AAAA,MAAlBX,cAAkB,QAAlBA,cAAkB;AAC3D,SAAO,aAAY,UAACE,OAAD,EAAUC,MAAV,EAAqB;AACtCL,IAAAA,SAAS,CACNM,UADH,CACcJ,cADd,EAEGS,GAFH,CAEOE,EAFP,EAGGN,GAHH,GAIGC,IAJH,CAIQ,UAAAG,GAAG,EAAI;AACX,UAAIA,GAAG,CAACI,MAAR,EAAgB;AACdX,QAAAA,OAAO;AACLS,UAAAA,EAAE,EAAEF,GAAG,CAACE;AADH,WAEFF,GAAG,CAACR,IAAJ,EAFE,EAAP;AAID,OALD,MAKO;AACLC,QAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,KAbH;AAcD,GAfM,CAAP;AAgBD;;AAED,SAASH,mBAAT,EAA8Ba,2BAA9B","sourcesContent":["import { firestore } from './db';\n\nfunction fetchCollectionDocs(collectionName) {\n  const data = [];\n  return new Promise((resolve, reject) => {\n    firestore\n      .collection(collectionName)\n      .get()\n      .then(documentSet => {\n        if (documentSet != null) {\n          documentSet.forEach(doc => {\n            data.push({\n              id: doc.id,\n              ...doc.data()\n            });\n          });\n        }\n        resolve(data);\n      });\n  });\n}\n\nfunction fetchDocumentFromCollection({ id, collectionName }) {\n  return new Promise((resolve, reject) => {\n    firestore\n      .collection(collectionName)\n      .doc(id)\n      .get()\n      .then(doc => {\n        if (doc.exists) {\n          resolve({\n            id: doc.id,\n            ...doc.data()\n          });\n        } else {\n          resolve({});\n        }\n      });\n  });\n}\n\nexport { fetchCollectionDocs, fetchDocumentFromCollection };\n"]},"metadata":{},"sourceType":"module"}