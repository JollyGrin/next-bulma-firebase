{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport Head from 'next/head';\nimport { firestore } from '../lib/db';\nimport React, { Component } from 'react';\nimport { fetchCollectionDocs, fetchDocumentFromCollection } from '../lib/utility';\nimport BlogList from '../components/BlogList';\n\nvar Index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Index, _Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      blogs: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"blogListener\", function () {\n      fetchCollectionDocs('blogs').then(function (blogs) {\n        _this.setState({\n          blogs: blogs\n        });\n      });\n    });\n\n    _this.collectionRef = firestore.collection('blogs');\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    // subscribe to firestore realtime for changes\n    value: function componentDidMount() {\n      this.unsubscribe = this.collectionRef.onSnapshot(this.blogListener, function (error) {\n        console.log(\"Error on Firebase Snapshot: \".concat(error));\n      });\n    } // unsubscribe from firestore listener\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, React.createElement(Head, null, React.createElement(\"title\", null, process.env.PROJECT_NAME, \" - Home Page\")), React.createElement(\"hr\", null), React.createElement(\"div\", null, React.createElement(\"h2\", null, \"From Props\"), this.props.blogs.map(function (blog) {\n        return React.createElement(\"li\", {\n          key: blog.id\n        }, blog.title);\n      })), React.createElement(\"hr\", null), React.createElement(\"div\", {\n        className: \"jas\"\n      }, React.createElement(BlogList, {\n        blogs: this.state.blogs\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var blogs;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                blogs = [];\n                _context.next = 3;\n                return firestore.collection('blogs').get().then(function (documentSet) {\n                  documentSet.forEach(function (doc) {\n                    blogs.push(_objectSpread({\n                      id: doc.id\n                    }, doc.data()));\n                  });\n                  return blogs;\n                });\n\n              case 3:\n                return _context.abrupt(\"return\", {\n                  blogs: blogs\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Index;\n}(Component);\n\nexport { Index as default };","map":{"version":3,"sources":["/Users/dean/github/next-tutorial/social/pages/index.js"],"names":["Head","firestore","React","Component","fetchCollectionDocs","fetchDocumentFromCollection","BlogList","Index","props","blogs","then","setState","collectionRef","collection","unsubscribe","onSnapshot","blogListener","error","console","log","process","env","PROJECT_NAME","map","blog","id","title","state","get","documentSet","forEach","doc","push","data"],"mappings":";;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,mBADF,EAEEC,2BAFF,QAGO,gBAHP;AAIA,OAAOC,QAAP,MAAqB,wBAArB;;IAEqBC,K;;;;;AAKnB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;;AADiB,4DAJX;AACNC,MAAAA,KAAK,EAAE;AADD,KAIW;;AAAA,mEAuBJ,YAAM;AACnBL,MAAAA,mBAAmB,CAAC,OAAD,CAAnB,CAA6BM,IAA7B,CAAkC,UAAAD,KAAK,EAAI;AACzC,cAAKE,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAALA;AAAF,SAAd;AACD,OAFD;AAGD,KA3BkB;;AAEjB,UAAKG,aAAL,GAAqBX,SAAS,CAACY,UAAV,CAAqB,OAArB,CAArB;AAFiB;AAGlB;;;;AA0BD;wCACoB;AAClB,WAAKC,WAAL,GAAmB,KAAKF,aAAL,CAAmBG,UAAnB,CACjB,KAAKC,YADY,EAEjB,UAAAC,KAAK,EAAI;AACPC,QAAAA,OAAO,CAACC,GAAR,uCAA2CF,KAA3C;AACD,OAJgB,CAAnB;AAMD,K,CAED;;;;2CACuB;AACrB,WAAKH,WAAL;AACD;;;6BAEQ;AACP,aACE,iCACE,oBAAC,IAAD,QACE,mCAAQM,OAAO,CAACC,GAAR,CAAYC,YAApB,iBADF,CADF,EAKE,+BALF,EAOE,iCACE,6CADF,EAEG,KAAKd,KAAL,CAAWC,KAAX,CAAiBc,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eACxB;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC;AAAd,WAAmBD,IAAI,CAACE,KAAxB,CADwB;AAAA,OAAzB,CAFH,CAPF,EAcE,+BAdF,EAgBE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWlB;AAA5B,QADF,CAhBF,CADF;AAsBD;;;;;;;;;;;;AA7DKA,gBAAAA,K,GAAQ,E;;uBACNR,SAAS,CACZY,UADG,CACQ,OADR,EAEHe,GAFG,GAGHlB,IAHG,CAGE,UAAAmB,WAAW,EAAI;AACnBA,kBAAAA,WAAW,CAACC,OAAZ,CAAoB,UAAAC,GAAG,EAAI;AACzBtB,oBAAAA,KAAK,CAACuB,IAAN;AACEP,sBAAAA,EAAE,EAAEM,GAAG,CAACN;AADV,uBAEKM,GAAG,CAACE,IAAJ,EAFL;AAID,mBALD;AAMA,yBAAOxB,KAAP;AACD,iBAXG,C;;;iDAaC;AAAEA,kBAAAA,KAAK,EAALA;AAAF,iB;;;;;;;;;;;;;;;;;;;EAzBwBN,S;;SAAdI,K","sourcesContent":["import Head from 'next/head';\nimport { firestore } from '../lib/db';\nimport React, { Component } from 'react';\nimport {\n  fetchCollectionDocs,\n  fetchDocumentFromCollection\n} from '../lib/utility';\nimport BlogList from '../components/BlogList';\n\nexport default class Index extends Component {\n  state = {\n    blogs: []\n  };\n\n  constructor(props) {\n    super(props);\n    this.collectionRef = firestore.collection('blogs');\n  }\n\n  static async getInitialProps() {\n    let blogs = [];\n    await firestore\n      .collection('blogs')\n      .get()\n      .then(documentSet => {\n        documentSet.forEach(doc => {\n          blogs.push({\n            id: doc.id,\n            ...doc.data()\n          });\n        });\n        return blogs;\n      });\n\n    return { blogs };\n  }\n\n  blogListener = () => {\n    fetchCollectionDocs('blogs').then(blogs => {\n      this.setState({ blogs });\n    });\n  };\n\n  // subscribe to firestore realtime for changes\n  componentDidMount() {\n    this.unsubscribe = this.collectionRef.onSnapshot(\n      this.blogListener,\n      error => {\n        console.log(`Error on Firebase Snapshot: ${error}`);\n      }\n    );\n  }\n\n  // unsubscribe from firestore listener\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    return (\n      <div>\n        <Head>\n          <title>{process.env.PROJECT_NAME} - Home Page</title>\n        </Head>\n\n        <hr />\n\n        <div>\n          <h2>From Props</h2>\n          {this.props.blogs.map(blog => (\n            <li key={blog.id}>{blog.title}</li>\n          ))}\n        </div>\n\n        <hr />\n\n        <div className=\"jas\">\n          <BlogList blogs={this.state.blogs} />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}