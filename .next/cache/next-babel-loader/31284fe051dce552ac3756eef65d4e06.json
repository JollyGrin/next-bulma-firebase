{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/dean/github/next-tutorial/social/pages/index.js\";\nimport Head from 'next/head';\nimport { firestore } from '../lib/db';\nimport React, { Component } from 'react';\nimport { fetchCollectionDocs, fetchDocumentFromCollection } from '../lib/utility';\nimport BlogList from '../components/BlogList';\nexport default class Index extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      blogs: []\n    });\n\n    _defineProperty(this, \"blogListener\", () => {\n      fetchCollectionDocs('blogs').then(blogs => {\n        this.setState({\n          blogs\n        });\n      });\n    });\n\n    this.collectionRef = firestore.collection('blogs');\n  }\n\n  static async getInitialProps() {\n    let blogs = [];\n    await firestore.collection('blogs').get().then(documentSet => {\n      documentSet.forEach(doc => {\n        blogs.push(_objectSpread({\n          id: doc.id\n        }, doc.data()));\n      });\n      return blogs;\n    });\n    return {\n      blogs\n    };\n  }\n\n  // subscribe to firestore realtime for changes\n  componentDidMount() {\n    this.unsubscribe = this.collectionRef.onSnapshot(this.blogListener, error => {\n      console.log(`Error on Firebase Snapshot: ${error}`);\n    });\n  } // unsubscribe from firestore listener\n\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, process.env.PROJECT_NAME, \" - Home Page\")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"From Props\"), this.props.blogs.map(blog => React.createElement(\"li\", {\n      key: blog.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, blog.title))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"jas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(BlogList, {\n      blogs: this.state.blogs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/dean/github/next-tutorial/social/pages/index.js"],"names":["Head","firestore","React","Component","fetchCollectionDocs","fetchDocumentFromCollection","BlogList","Index","constructor","props","blogs","then","setState","collectionRef","collection","getInitialProps","get","documentSet","forEach","doc","push","id","data","componentDidMount","unsubscribe","onSnapshot","blogListener","error","console","log","componentWillUnmount","render","process","env","PROJECT_NAME","map","blog","title","state"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,mBADF,EAEEC,2BAFF,QAGO,gBAHP;AAIA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,eAAe,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAK3CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,mCAJX;AACNC,MAAAA,KAAK,EAAE;AADD,KAIW;;AAAA,0CAuBJ,MAAM;AACnBN,MAAAA,mBAAmB,CAAC,OAAD,CAAnB,CAA6BO,IAA7B,CAAkCD,KAAK,IAAI;AACzC,aAAKE,QAAL,CAAc;AAAEF,UAAAA;AAAF,SAAd;AACD,OAFD;AAGD,KA3BkB;;AAEjB,SAAKG,aAAL,GAAqBZ,SAAS,CAACa,UAAV,CAAqB,OAArB,CAArB;AACD;;AAED,eAAaC,eAAb,GAA+B;AAC7B,QAAIL,KAAK,GAAG,EAAZ;AACA,UAAMT,SAAS,CACZa,UADG,CACQ,OADR,EAEHE,GAFG,GAGHL,IAHG,CAGEM,WAAW,IAAI;AACnBA,MAAAA,WAAW,CAACC,OAAZ,CAAoBC,GAAG,IAAI;AACzBT,QAAAA,KAAK,CAACU,IAAN;AACEC,UAAAA,EAAE,EAAEF,GAAG,CAACE;AADV,WAEKF,GAAG,CAACG,IAAJ,EAFL;AAID,OALD;AAMA,aAAOZ,KAAP;AACD,KAXG,CAAN;AAaA,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACD;;AAQD;AACAa,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,WAAL,GAAmB,KAAKX,aAAL,CAAmBY,UAAnB,CACjB,KAAKC,YADY,EAEjBC,KAAK,IAAI;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAa,+BAA8BF,KAAM,EAAjD;AACD,KAJgB,CAAnB;AAMD,GA1C0C,CA4C3C;;;AACAG,EAAAA,oBAAoB,GAAG;AACrB,SAAKN,WAAL;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQC,OAAO,CAACC,GAAR,CAAYC,YAApB,iBADF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEG,KAAKzB,KAAL,CAAWC,KAAX,CAAiByB,GAAjB,CAAqBC,IAAI,IACxB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACf,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBe,IAAI,CAACC,KAAxB,CADD,CAFH,CAPF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EAgBE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAW5B,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAhBF,CADF;AAsBD;;AAxE0C","sourcesContent":["import Head from 'next/head';\nimport { firestore } from '../lib/db';\nimport React, { Component } from 'react';\nimport {\n  fetchCollectionDocs,\n  fetchDocumentFromCollection\n} from '../lib/utility';\nimport BlogList from '../components/BlogList';\n\nexport default class Index extends Component {\n  state = {\n    blogs: []\n  };\n\n  constructor(props) {\n    super(props);\n    this.collectionRef = firestore.collection('blogs');\n  }\n\n  static async getInitialProps() {\n    let blogs = [];\n    await firestore\n      .collection('blogs')\n      .get()\n      .then(documentSet => {\n        documentSet.forEach(doc => {\n          blogs.push({\n            id: doc.id,\n            ...doc.data()\n          });\n        });\n        return blogs;\n      });\n\n    return { blogs };\n  }\n\n  blogListener = () => {\n    fetchCollectionDocs('blogs').then(blogs => {\n      this.setState({ blogs });\n    });\n  };\n\n  // subscribe to firestore realtime for changes\n  componentDidMount() {\n    this.unsubscribe = this.collectionRef.onSnapshot(\n      this.blogListener,\n      error => {\n        console.log(`Error on Firebase Snapshot: ${error}`);\n      }\n    );\n  }\n\n  // unsubscribe from firestore listener\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    return (\n      <div>\n        <Head>\n          <title>{process.env.PROJECT_NAME} - Home Page</title>\n        </Head>\n\n        <hr />\n\n        <div>\n          <h2>From Props</h2>\n          {this.props.blogs.map(blog => (\n            <li key={blog.id}>{blog.title}</li>\n          ))}\n        </div>\n\n        <hr />\n\n        <div className=\"jas\">\n          <BlogList blogs={this.state.blogs} />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}